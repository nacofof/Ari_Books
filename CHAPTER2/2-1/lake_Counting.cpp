//p35~
#include <iostream>
#define MAX 100
using namespace std;

//入力
int N = 10, M = 12;
char field[MAX][MAX + 1] = {{'w','.','.','.','.','.','.','.','.','w','w','.'},
                            {'.','w','w','w','.','.','.','.','.','w','w','w'},
                            {'.','.','.','.','w','w','.','.','.','w','w','.'},
                            {'.','.','.','.','.','.','.','.','.','w','w','.'},
                            {'.','.','.','.','.','.','.','.','.','w','.','.'},
                            {'.','.','w','.','.','.','.','.','.','w','.','.'},
                            {'.','w','.','w','.','.','.','.','.','w','w','.'},
                            {'w','.','w','.','w','.','.','.','.','.','w','.'},
                            {'.','w','.','w','.','.','.','.','.','.','w','.'},
                            {'.','.','w','.','.','.','.','.','.','.','w','.'},} ;//庭

//現在位置(x,y)
void dfs(int x, int y){
    //今いるところを . に置き換える
    field[x][y] = '.';
    //移動する８方向をループ
    for(int dx = -1; dx <= 1; dx++){
        for(int dy = -1; dy <= 1; dy++){
            //x方向にdx，y方向にdy移動した場所を(nx,ny)とする
            int nx = x + dx, ny = y + dy;
            
            //nxとnyが庭の範囲内かどうかとfield[nx][ny]が水たまりかどうかを判定
            if(0 <= nx && nx < N && 0 <= ny && ny < M && field[nx][ny] == 'w') dfs(nx, ny);
        }
    }
    return ;
}

int main(void){
    int res = 0;
    for(int i = 0; i < N; i++){
        for(int j = 0; j < M; j++){
            if (field[i][j] == 'w'){
                //wが残っているならそこからdfsを始める
                dfs(i, j);
                res++;
            }
        }
    }
    cout << res << endl;
    return 0;
}